import requests
import time
import os

class VirusTotalScanner:
    def __init__(self, api_key):
        self.api_key = api_key
        self.headers = {"x-apikey": self.api_key}

    def scan_and_get_results(self, file_path):
        if not os.path.isfile(file_path):
            print(f"Error: File '{file_path}' does not exist.")
            return

        scan_url = "https://www.virustotal.com/api/v3/files"

        print(f"Uploading file '{file_path}' for scanning...")
        try:
            with open(file_path, "rb") as file:
                files = {"file": file}
                scan_response = requests.post(scan_url, headers=self.headers, files=files)

            if scan_response.status_code == 200:
                scan_result = scan_response.json()
                analysis_id = scan_result['data']['id']
                print(f"File uploaded successfully. Analysis ID: {analysis_id}")
            else:
                print(f"Failed to upload file: {scan_response.text}")
                return
        except Exception as e:
            print(f"Error uploading file: {e}")
            return        # Ensure the file exists


        analysis_url = f"https://www.virustotal.com/api/v3/analyses/{analysis_id}"
        while True:
            try:
                analysis_response = requests.get(analysis_url, headers=self.headers)

                if analysis_response.status_code == 200:
                    analysis_result = analysis_response.json()
                    status = analysis_result['data']['attributes']['status']
                    
                    if status == "completed":
                        stats = analysis_result['data']['attributes']['stats']
                        harmless = stats.get('harmless', 0)
                        malicious = stats.get('malicious', 0)
                        suspicious = stats.get('suspicious', 0)

                        print("\n--- Analysis Results ---")
                        print(f"Harmless: {harmless}")
                        print(f"Malicious: {malicious}")
                        print(f"Suspicious: {suspicious}")

                        if malicious > 0:
                            print("Final Verdict: The file is MALICIOUS.")
                        elif suspicious > 0:
                            print("Final Verdict: The file is SUSPICIOUS.")
                        else:
                            print("Final Verdict: The file is CLEAN.")
                        break
                    else:
                        print("Analysis in progress")
                        time.sleep(10)
                else:
                    print(f"Failed to fetch analysis results: {analysis_response.text}")
                    break
            except Exception as e:
                print(f"Error fetching analysis results: {e}")
                break
